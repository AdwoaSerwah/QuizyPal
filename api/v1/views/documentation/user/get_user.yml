swagger: "2.0"
info:
  description: "This API allows users to retrieve a specific user from the system."
  version: "1.0.0"
  title: "User Management API"

host: "localhost"
basePath: "/api/v1"

paths:
  /users/{user_id}:
    get:
      summary: "Retrieve a specific user by ID"
      description: |
        Retrieves a specific user from the system based on the provided user ID.
        If the user with the provided ID is not found, it returns a 404 error.

      operationId: "getUser"
      tags:
        - "Users"

      parameters:
        - name: "user_id"
          in: "path"
          description: "The unique ID of the user to retrieve."
          required: true
          type: "string"
        - name: "Authorization"
          in: "header"
          description: "JWT authentication token required for accessing this endpoint"
          required: true
          type: "string"

      responses:
        200:
          description: "Successful retrieval of the user"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                description: "User ID"
              first_name:
                type: "string"
                description: "The user's first name"
              last_name:
                type: "string"
                description: "The user's last name"
              username:
                type: "string"
                description: "The user's unique username"
              email:
                type: "string"
                description: "The user's email address"
              role:
                type: "string"
                description: "The user's role (e.g., 'user', 'admin')"
              created_at:
                type: "string"
                format: "date-time"
                description: "The creation timestamp of the user"
              updated_at:
                type: "string"
                format: "date-time"
                description: "The timestamp when the user was last updated"
          examples:
            application/json:
              id: "123"
              first_name: "John"
              last_name: "Doe"
              username: "johndoe"
              email: "johndoe@example.com"
              role: "user"
              created_at: "2025-01-01T12:00:00Z"
              updated_at: "2025-01-01T12:00:00Z"

        404:
          description: "User not found. The user with the provided ID does not exist."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "User not found"

        401:
          description: "Unauthorized access. Invalid or missing JWT token."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Missing or invalid JWT token"
          
      security:
        - jwtAuth: []
      
securityDefinitions:
  jwtAuth:
    type: "apiKey"
    in: "header"
    name: "Authorization"
    description: "JWT authentication token"
