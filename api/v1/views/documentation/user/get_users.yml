swagger: "2.0"
info:
  description: "This API allows users to retrieve all users from the system."
  version: "1.0.0"
  title: "User Management API"

host: "localhost"
basePath: "/api/v1"

paths:
  /users:
    get:
      summary: "Retrieve all users"
      description: |
        Retrieves all users from the system and returns them as a JSON response.
        If there are no users in the database, it returns an empty list.

      operationId: "getUsers"
      tags:
        - "Users"

      parameters:
        - name: "Authorization"
          in: "header"
          description: "JWT authentication token required for accessing this endpoint"
          required: true
          type: "string"

      responses:
        200:
          description: "Successful retrieval of all users"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  description: "User ID"
                first_name:
                  type: "string"
                  description: "The user's first name"
                last_name:
                  type: "string"
                  description: "The user's last name"
                username:
                  type: "string"
                  description: "The user's unique username"
                email:
                  type: "string"
                  description: "The user's email address"
                role:
                  type: "string"
                  description: "The user's role (e.g., 'user', 'admin')"
                created_at:
                  type: "string"
                  format: "date-time"
                  description: "The creation timestamp of the user"
                updated_at:
                  type: "string"
                  format: "date-time"
                  description: "The timestamp when the user was last updated"
          examples:
            application/json:
              - id: "123"
                first_name: "John"
                last_name: "Doe"
                username: "johndoe"
                email: "johndoe@example.com"
                role: "user"
                created_at: "2025-01-01T12:00:00Z"
                updated_at: "2025-01-01T12:00:00Z"
              - id: "124"
                first_name: "Jane"
                last_name: "Doe"
                username: "janedoe"
                email: "janedoe@example.com"
                role: "user"
                created_at: "2025-01-02T12:00:00Z"
                updated_at: "2025-01-02T12:00:00Z"
              # If no users exist:
              - []

        401:
          description: "Unauthorized access. Invalid or missing JWT token."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Missing or invalid JWT token"
          
      security:
        - jwtAuth: []
      
securityDefinitions:
  jwtAuth:
    type: "apiKey"
    in: "header"
    name: "Authorization"
    description: "JWT authentication token"
