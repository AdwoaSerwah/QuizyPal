swagger: "2.0"
info:
  description: "This API allows users to reset their password using a valid reset token."
  version: "1.0.0"
  title: "Authentication API"

host: "localhost"
basePath: "/api/v1"

paths:
  /reset-password/{token}:
    post:
      summary: "Reset the user's password using a valid reset token."
      description: |
        This route allows users to reset their password by providing a valid reset token.
        If the token is valid and not expired, the user can set a new password.

      operationId: "resetPassword"
      tags:
        - "Authentication"

      parameters:
        - name: "token"
          in: "path"
          description: "The reset token provided by the user in the password reset email."
          required: true
          type: "string"
          example: "reset-token-example-1234"

        - name: "body"
          in: "body"
          description: "The new password that the user wants to set."
          required: true
          schema:
            type: "object"
            properties:
              new_password:
                type: "string"
                description: "The new password to be set."
                example: "new_secure_password_123"

      responses:
        200:
          description: "Success. The password has been successfully reset."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Password reset successful."
          examples:
            application/json:
              {
                "message": "Password reset successful."
              }

        400:
          description: "Bad request. The token is invalid, expired, or missing new password."
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Invalid or expired token"
              format:
                type: "object"
                properties:
                  new_password:
                    type: "string"
                    example: "your_new_password"
          examples:
            application/json:
              {
                "error": "Invalid or expired token",
                "format": {"new_password": "your_new_password"}
              }

        400:
          description: "Bad request. The token expired or is invalid."
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Token expired"
          examples:
            application/json:
              {
                "error": "Token expired"
              }

securityDefinitions:
  jwtAuth:
    type: "apiKey"
    in: "header"
    name: "Authorization"
    description: "JWT authentication token"
