swagger: "2.0"
info:
  title: "QuizyPal API"
  description: "API for handling forgot password requests by generating a reset token and sending a password reset link to the user's email."
  version: "1.0.0"
paths:
  /api/v1/forgot-password:
    post:
      summary: "Handle forgot password requests"
      description: |
        This endpoint generates a password reset token and sends a reset link to the user's email. 
        The token is valid for a specific duration and is used to verify the user's identity during 
        the password reset process.

        **Important Notes:**
        - The request must include the user's email address.
        - If the email is not associated with any user, the endpoint will return a 404 error.
        - The reset token is generated and stored for future verification.

      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Email of the user requesting password reset"
          required: true
          schema:
            type: "object"
            required:
              - "email"
            properties:
              email:
                type: "string"
                format: "email"
                description: "The email address of the user requesting a password reset."
                example: "user@example.com"
      responses:
        200:
          description: "Reset token generated and email sent successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "Message confirming the email was sent successfully."
                example: "Password reset email sent successfully."
              reset token:
                type: "string"
                description: "The generated password reset token."
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        400:
          description: "Bad request, missing or invalid data"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Error message indicating the issue with the request."
                example: "Missing email"
        404:
          description: "User not found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Error message indicating that the user was not found."
                example: "User not found"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Error message indicating an unexpected issue occurred."
                example: "An unexpected error occurred"
      security:
        - JWT: []
definitions:
  JWT:
    type: "apiKey"
    in: "header"
    name: "Authorization"
    description: "JWT token used to authenticate the user."
