swagger: "2.0"
info:
  description: "This API allows users to request a password reset. It generates a reset token and sends a reset link to the user's email address."
  version: "1.0.0"
  title: "Authentication API"

host: "localhost"
basePath: "/api/v1"

paths:
  /forgot-password:
    post:
      summary: "Request a password reset by providing the user's email address."
      description: |
        This route allows users to request a password reset by providing their email address.
        If the user is found, a password reset token will be generated and sent to the user's email.
        The email will contain a link to reset the password.

      operationId: "forgotPassword"
      tags:
        - "Authentication"

      parameters:
        - name: "email"
          in: "body"
          description: "The email address of the user requesting a password reset."
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                description: "The user's email address"
                example: "user@example.com"

      responses:
        200:
          description: "Success. A password reset email with a reset token was sent."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Password reset email sent."
              reset_token:
                type: "string"
                description: "The generated reset token."
                example: "reset-token-example-1234"
          examples:
            application/json:
              {
                "message": "Password reset email sent.",
                "reset_token": "reset-token-example-1234"
              }

        400:
          description: "Bad request. The request body is not in JSON format or the email is missing."
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Missing email"
          examples:
            application/json:
              {
                "error": "Missing email"
              }

        404:
          description: "User not found. The email provided does not correspond to any user."
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "User not found"
          examples:
            application/json:
              {
                "error": "User not found"
              }

securityDefinitions:
  jwtAuth:
    type: "apiKey"
    in: "header"
    name: "Authorization"
    description: "JWT authentication token"
