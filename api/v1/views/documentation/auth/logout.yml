swagger: "2.0"
info:
  title: "QuizyPal API"
  description: "API for user authentication, specifically for logging out users by invalidating their refresh tokens. The refresh token is blacklisted in Redis, and its status is marked as expired in the database."
  version: "1.0.0"
paths:
  /api/v1/logout:
    post:
      summary: "Logs the user out by invalidating the refresh token"
      description: |
        Logs the user out by blacklisting the provided refresh token in Redis, 
        and marking the token as expired in the database. The user will be 
        logged out from the application, and the refresh token will no longer 
        be usable for future authentication.

        **Important:**
        - The user must provide a valid `token_id` for the refresh token.
        - The refresh token will be blacklisted and marked as expired in the database.
        - If the refresh token is missing or invalid, the request will fail.

        After successful logout, the refresh token cannot be used to generate new access tokens.

      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "The ID of the refresh token to be invalidated"
          required: true
          schema:
            type: "object"
            required:
              - "token_id"
            properties:
              token_id:
                type: "integer"
                description: "The ID of the refresh token to be invalidated. It must exist in the database."
                example: 12345
      responses:
        200:
          description: "Successfully logged out and invalidated refresh token"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "A message indicating the success of the logout operation."
                example: "Logged out successfully"
        400:
          description: "Bad request, missing refresh token ID"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "A message indicating that the refresh token ID is missing."
                example: "Refresh token ID is required"
        401:
          description: "Unauthorized, invalid or expired refresh token"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "A message indicating that the refresh token is invalid or expired."
                example: "Invalid or expired refresh token"
        500:
          description: "Internal server error, unexpected issues during logout"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "A message indicating that an unexpected error occurred."
                example: "An unexpected error occurred"
        security:
          - JWT: []
definitions:
  JWT:
    type: "apiKey"
    in: "header"
    name: "Authorization"
    description: "JWT token used to authenticate the user."
    required: true
    x-security: "JWT token required for authentication."
