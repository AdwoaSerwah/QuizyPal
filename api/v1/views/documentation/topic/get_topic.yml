swagger: "2.0"
info:
  description: "This API allows users to retrieve a specific topic by its unique ID."
  version: "1.0.0"
  title: "Topic Management API"

host: "localhost"
basePath: "/api/v1"

paths:
  /topics/{topic_id}:
    get:
      summary: "Retrieve a specific topic"
      description: |
        Retrieves a single topic from the system based on the provided topic ID.
        If the topic is not found, the API returns a 404 error.
      operationId: "getTopic"
      tags:
        - "Topics"
      parameters:
        - name: "Authorization"
          in: "header"
          description: "JWT authentication token required for accessing this endpoint"
          required: true
          type: "string"
        - name: "topic_id"
          in: "path"
          description: "The unique identifier of the topic to retrieve"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful retrieval of the topic"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                description: "Unique identifier for the topic."
              name:
                type: "string"
                description: "Name of the topic."
              parent_id:
                type: "string"
                nullable: true
                description: "The ID of the parent topic. Null if no parent exists."
              created_at:
                type: "string"
                format: "date-time"
                description: "Timestamp when the topic was created."
              updated_at:
                type: "string"
                format: "date-time"
                description: "Timestamp when the topic was last updated."
          examples:
            application/json:
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "Science",
                "parent_id": null,
                "created_at": "2025-01-01T12:00:00Z",
                "updated_at": "2025-01-02T12:00:00Z"
              }
        404:
          description: "Topic not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Topic not found"
        401:
          description: "Unauthorized access. Invalid or missing JWT token."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Missing or invalid JWT token"

securityDefinitions:
  jwtAuth:
    type: "apiKey"
    in: "header"
    name: "Authorization"
    description: "JWT authentication token"
