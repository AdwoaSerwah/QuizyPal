swagger: "2.0"
info:
  description: "This API allows users to retrieve all topics from the system."
  version: "1.0.0"
  title: "Topic Management API"

host: "localhost"
basePath: "/api/v1"

paths:
  /topics:
    get:
      summary: "Retrieve all topics"
      description: |
        Retrieves all topics from the system and returns them as a JSON response.
        If there are no topics in the database, it returns an empty list.
      operationId: "getTopics"
      tags:
        - "Topics"
      parameters:
        - name: "Authorization"
          in: "header"
          description: "JWT authentication token required for accessing this endpoint"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful retrieval of all topics"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  description: "Unique identifier for the topic."
                name:
                  type: "string"
                  description: "Name of the topic."
                parent_id:
                  type: "string"
                  nullable: true
                  description: "The ID of the parent topic. Null if no parent exists."
                created_at:
                  type: "string"
                  format: "date-time"
                  description: "Timestamp when the topic was created."
                updated_at:
                  type: "string"
                  format: "date-time"
                  description: "Timestamp when the topic was last updated."
          examples:
            application/json:
              [
                {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "name": "Science",
                  "parent_id": null,
                  "created_at": "2025-01-01T12:00:00Z",
                  "updated_at": "2025-01-02T12:00:00Z"
                },
                {
                  "id": "123e4567-e89b-12d3-a456-426614174001",
                  "name": "Physics",
                  "parent_id": "123e4567-e89b-12d3-a456-426614174000",
                  "created_at": "2025-01-03T12:00:00Z",
                  "updated_at": "2025-01-03T14:00:00Z"
                }
              ]
        401:
          description: "Unauthorized access. Invalid or missing JWT token."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Missing or invalid JWT token"

securityDefinitions:
  jwtAuth:
    type: "apiKey"
    in: "header"
    name: "Authorization"
    description: "JWT authentication token"
